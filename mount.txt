A mount point is merely an empty directory somewhere. So all you need to do is 'mkdir'. (Note: I'm su'd to root, so I don't need to prefix my commands with 'sudo'.)

Eg.
Code:
[root@athlon ~]# ls /home
lost+found  thomaslovell  tommy

[root@athlon ~]# mkdir /home/mystuff

[root@athlon ~]# ls -l /home
total 28
drwx------.  2 root  users 16384 Mar 14  2011 lost+found
drwxr-xr-x.  2 root  root   4096 Oct  6 09:19 mystuff
drwx------.  7   501 users  4096 Apr 30 17:27 thomaslovell
drwx------. 31 tommy users  4096 Jul 17 08:24 tommy
[root@athlon ~]#
But I'm sure you really are asking the question because you want to mount a filesystem on it.

You may just want to mount an existing filesystem there, but I'll do a new one from scratch. The filesystem will be an LVM Logical Volume. 

(An LVM logical volume is a block device that is treated exactly the same as a physical partition like /dev/sdXY, which is also a block device.)

Code:
[root@athlon ~]# vgs
  VG     #PV #LV #SN Attr   VSize VFree  
  athlon   1   4   0 wz--n- 1.36t 987.16g

[root@athlon ~]# lvs
  LV   VG     Attr   LSize   Origin Snap%  Move Log Copy%  Convert
  bkup athlon -wi-ao 300.00g                                      
  home athlon -wi-ao   4.00g                                      
  root athlon -wi-ao 100.00g                                      
  swap athlon -wi-ao   6.00g                                      

[root@athlon ~]# lvcreate -L10G -n mystufflv athlon
  Logical volume "mystufflv" created

[root@athlon ~]# mkfs.ext4 /dev/mapper/athlon-mystufflv 
mke2fs 1.41.14 (22-Dec-2010)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
655360 inodes, 2621440 blocks
131072 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=2684354560
80 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632

Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 32 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
[root@athlon ~]#
Now I have a newly formatted filesystem on block device /dev/mapper/athlon-mystufflv. 

(To emphasize the point, that's the equivilent of a partition, like /dev/sdXY. They are both block devices.) 

I can now manually mount it on my new mount point /home/mystuff, and umount it if I wish. 

(Note: a device cannot be umounted if it is use. If you attempt a umount and it says device is busy, then some process has a file open on that filesystem. So make sure you have not cd'd into that filesystem when you try to umount it... That's a common error. You can use the lsof or fuser commands to see who - 'lsof +D /home/mystuff' would tell you that).

Code:
[root@athlon ~]# df -h | grep home
/dev/mapper/athlon-home
                      4.0G  503M  3.3G  14% /home

[root@athlon ~]# mount /dev/mapper/athlon-mystufflv /home/mystuff/

[root@athlon ~]# df -h | grep home
/dev/mapper/athlon-home
                      4.0G  503M  3.3G  14% /home
                      9.9G  151M  9.2G   2% /home/mystuff

[root@athlon ~]# umount /home/mystuff/

[root@athlon ~]# df -h | grep home
/dev/mapper/athlon-home
                      4.0G  503M  3.3G  14% /home
Or, if I wanted it mounted at boot time, I could add this entry,
/dev/mapper/athlon-mystufflv /home/mystuff ext4 defaults 1 3
to /etc/fstab.
Code:
#
# /etc/fstab
# Created by anaconda on Sun Jul 17 01:51:58 2011
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/athlon-root /                       ext4    defaults        1 1
/dev/mapper/athlon-bkup /bkup                   ext4    defaults        1 2
UUID=5e875990-69d1-4c87-9a1c-48c8751d1861 /boot                   ext4    defaults        1 2
/dev/mapper/athlon-home /home                   ext4    defaults        1 2
/dev/mapper/athlon-swap swap                    swap    defaults        0 0
tmpfs                   /dev/shm                tmpfs   defaults        0 0
devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
sysfs                   /sys                    sysfs   defaults        0 0
proc                    /proc                   proc    defaults        0 0
/dev/mapper/athlon-mystufflv /home/mystuff      ext4    defaults        1 3
To mount it immediately after editing /etc/fstab, just issue 'mount -a'.

Code:
[root@athlon ~]# mount -a
Then you can check if it is mounted with the 'mount' command with no flags.
Code:
[root@athlon ~]# mount 
/proc on /proc type proc (rw,relatime)
/sys on /sys type sysfs (rw,relatime,seclabel)
udev on /dev type devtmpfs (rw,nosuid,relatime,seclabel,size=1985740k,nr_inodes=496435,mode=755)
devpts on /dev/pts type devpts (rw,relatime,seclabel,gid=5,mode=620,ptmxmode=000)
tmpfs on /dev/shm type tmpfs (rw,relatime,seclabel)
tmpfs on /run type tmpfs (rw,nosuid,nodev,noexec,relatime,seclabel,mode=755)
/dev/mapper/athlon-root on / type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
selinuxfs on /selinux type selinuxfs (rw,relatime)
tmpfs on /sys/fs/cgroup type tmpfs (rw,nosuid,nodev,noexec,relatime,seclabel,mode=755)
cgroup on /sys/fs/cgroup/systemd type cgroup (rw,nosuid,nodev,noexec,relatime,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd)
cgroup on /sys/fs/cgroup/cpuset type cgroup (rw,nosuid,nodev,noexec,relatime,cpuset)
cgroup on /sys/fs/cgroup/ns type cgroup (rw,nosuid,nodev,noexec,relatime,ns)
cgroup on /sys/fs/cgroup/cpu type cgroup (rw,nosuid,nodev,noexec,relatime,cpu)
cgroup on /sys/fs/cgroup/cpuacct type cgroup (rw,nosuid,nodev,noexec,relatime,cpuacct)
cgroup on /sys/fs/cgroup/memory type cgroup (rw,nosuid,nodev,noexec,relatime,memory)
cgroup on /sys/fs/cgroup/devices type cgroup (rw,nosuid,nodev,noexec,relatime,devices)
cgroup on /sys/fs/cgroup/freezer type cgroup (rw,nosuid,nodev,noexec,relatime,freezer)
cgroup on /sys/fs/cgroup/net_cls type cgroup (rw,nosuid,nodev,noexec,relatime,net_cls)
cgroup on /sys/fs/cgroup/blkio type cgroup (rw,nosuid,nodev,noexec,relatime,blkio)
systemd-1 on /dev/mqueue type autofs (rw,relatime,fd=30,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)
systemd-1 on /dev/hugepages type autofs (rw,relatime,fd=31,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)
systemd-1 on /sys/kernel/security type autofs (rw,relatime,fd=32,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)
systemd-1 on /sys/kernel/debug type autofs (rw,relatime,fd=33,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)
systemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=35,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)
tmpfs on /media type tmpfs (rw,nosuid,nodev,noexec,relatime,rootcontext=system_u:object_r:mnt_t:s0,seclabel,mode=755)
hugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime,seclabel)
mqueue on /dev/mqueue type mqueue (rw,relatime,seclabel)
/dev/md1 on /boot type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
/dev/mapper/athlon-home on /home type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
/dev/mapper/athlon-bkup on /bkup type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
/dev/mapper/athlon-root on /tmp type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
/dev/mapper/athlon-root on /var/tmp type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
/dev/mapper/athlon-home on /home type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)
sunrpc on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw,relatime)
securityfs on /sys/kernel/security type securityfs (rw,relatime)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
/dev/mapper/athlon-mystufflv on /home/mystuff type ext4 (rw,relatime,seclabel,barrier=1,data=ordered)

[root@athlon ~]#
(A lot of "stuff' mounted, but you can see it at the end of the list...)

When you reboot, it'll automatically be mounted for you.

If you are not yet familiar with the man pages they should explain all of the flags available on a command. (They vary in quality sometimes.) Do 'man mount', to see its man page. (Use 'q' to quit out of it.)
